#!/usr/bin/env python
"""Phoenix group to node mapping utility"""
# vim: tabstop=4 shiftwidth=4 softtabstop=4

import sys
import argparse
import Phoenix
from Phoenix.System import System

def get_parser():
    parser = argparse.ArgumentParser(prog="phoenix_group", description="Map between groups and nodes")
    parser.add_argument('--list', dest='list', default=None, action='store_true', help='List all known groups')
    parser.add_argument('--bare', dest='bare', default=False, action='store_true', help='Show bare group names (without the @ symbol)')
    parser.add_argument('group', nargs='?', default=None, type=str, help='Group to list')
    parser.add_argument('-v', '--verbose', action='count', default=0)
    return parser

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()

    Phoenix.setup_logging(args.verbose)

    if args.list:
        if args.bare:
            print '\n'.join(System.list_groups())
        else:
            print '\n'.join([ '@%s' % x for x in System.list_groups() ])
        sys.exit(0)

    if args.group is None:
        parser.print_usage(sys.stderr)
        sys.exit(2)

    print System.find_group(args.group)
