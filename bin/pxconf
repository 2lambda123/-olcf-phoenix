#!/usr/bin/env python
"""Phoenix configuration"""
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

import sys
import argparse
import logging
from ClusterShell.NodeSet import NodeSet
import Phoenix
from Phoenix.BootLoader import get_bootloader_script
from Phoenix.Node import Node
from Phoenix.System import System

def get_parser():
    parser = argparse.ArgumentParser(description="Phoenix configuration utility")
    parser.add_argument('-v', '--verbose', action='count', default=0)
    subparsers = parser.add_subparsers(help='sub-command help', dest='action')
    parser_hosts = subparsers.add_parser('hosts', help='hosts help')

    parser_dhcp = subparsers.add_parser('dhcp', help='dhcp help')

    parser_bootfile = subparsers.add_parser('bootfile', help='bootfile help')

    #parser.add_argument("function", choices=['hosts', 'dhcp'])
    return parser

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()

    Phoenix.setup_logging(args.verbose)
    Node.load_nodes()

    if args.action == 'hosts':
        for nodename,node in sorted(Node.nodes.items()):
            if 'interfaces' in node:
                for ifacename, iface in node['interfaces'].items():
                    hostname = iface['hostname'] if 'hostname' in iface else nodename
                    print "%s\t%s\t%s.%s" % (iface['ip'], hostname, hostname, System.config['domain'])
                #print node['name']
    elif args.action == 'bootfile':
        for nodename,node in sorted(Node.nodes.items()):
            print get_bootloader_script(node)

    rc = 0


    sys.exit(rc)
