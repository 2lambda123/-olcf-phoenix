#!/usr/bin/env python
"""Phoenix discovery tool"""
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

import sys
import argparse
import logging
from ClusterShell.NodeSet import NodeSet
import Phoenix
import Phoenix.Parallel
from Phoenix.Node import Node
from Phoenix.DataSource.CsvDataSource import CsvDataSource

def get_parser():
    parser = argparse.ArgumentParser(prog="phoenix_discover", description="Discover Phoenix nodes")
    parser.add_argument('nodes', default=None, type=str, help='Nodes to discover')
    parser.add_argument('arguments', nargs='*')
    parser.add_argument('-v', '--verbose', action='count', default=0)
    parser.add_argument('-f', '--fanout', type=int, default=64, help='Fanout value')
    parser.add_argument('-t', '--command-timeout', type=int, default=0)
    parser.add_argument('-T', '--connect-timeout', type=int, default=20)
    return parser

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()

    Phoenix.setup_logging(args.verbose)

    nodes = NodeSet(args.nodes)

    (task, _) = Phoenix.Parallel.setup(nodes, args)
    cmd = "inventory %s" % ("EthernetInterfaces/ManagementEthernet MACAddress")
    task.shell(cmd, nodes=nodes, autoclose=False, stdin=False, tree=True, remote=False)
    task.resume()

    data = CsvDataSource('mac')

    for buf, nodes in task.iter_buffers():
        for node in nodes:
            print "%s is %s" % (node, buf)
            data[node] = buf

    sys.exit(0)
